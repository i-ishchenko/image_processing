clear;
close all;
clc;

%% 1. Завантажити з бібліотеки MATLAB кілька тестових зображень.
img1 = imread('cameraman.tif');
img2 = imread('peppers.png');
img3 = imread('coins.png');

%% 2. Відобразити вихідні зображення на екрані ПК. %
figure, imshow(chipsImg), title('Chips');
figure, imshow(pearsImg), title('Pears');
figure, imshow(wagonImg), title('Wagon');

%% 3. Здійснити процедуру зашумлення зображення нормальним білим шумом і імпульсною перешкодою з різною щільністю.%
%% 4. Відобразити зашумлені зображення.%
noisy1 = imnoise(img1, 'gaussian', 0, 0.01);
figure, imshow(noisy1), title('Cameraman noise');
noisy2 = imnoise(img2, 'salt & pepper', 0.05);
figure, imshow(img2), title('Peppers noise');
noisy3 = imnoise(img3, 'gaussian', 0, 0.05);
figure, imshow(noisy3), title('Coins noise');

%% 5. Виконати фільтрацію вихідних зображень лінійними фільтрами з використанням віконних фільтрів низьких і високих частот, і процедури imfilter(I,h); %
h1_low = ones(3,3) / 9;
h2_low = [1, 1, 1; 1, 2, 1; 1, 1, 1] / 10;
h3_low = [1, 2, 1; 2, 4, 2; 1, 2, 1] / 16;
h1_high = [0, -1, 0; -1, 5, -1; 0, -1, 0];
h2_high = [-1, -1, -1; -1, 9, -1; -1, -1, -1];
h3_high = [1, -2, 1; -2, 5, -2; 1, -2, 1];
%%

%% 6. Відобразити зображення після фільтрації. Пояснити отриманий результат (зміна характеру зображення в результаті фільтрації). --%
%% 7. Профільтрувати різними лінійними  фільтрами зображення, що зашумлені різними за характером перешкодами. Відобразити результат фільтрації. Пояснити отриманий результат. --%
noisyImgFilter = imfilter(noisy3, h1_low);
figure, imshow(noisyImgFilter), title('Noise filter 1 low');
noisyImgFilter = imfilter(noisy3, h2_low);
figure, imshow(noisyImgFilter), title('Noise filter 2 low');
noisyImgFilter = imfilter(noisy3, h3_low);
figure, imshow(noisyImgFilter), title('Noise filter 3 low');

noisyImgFilter = imfilter(noisy3, h1_high);
figure, imshow(noisyImgFilter), title('noise filter 1 high');
noisyImgFilter = imfilter(noisy3, h2_high);
figure, imshow(noisyImgFilter), title('noise filter 2 high');
noisyImgFilter = imfilter(noisy3, h3_high);
figure, imshow(noisyImgFilter), title('noise filter 3 high');

%% 8. Виконати фільтрацію вихідних і перекручених шумами зображень адаптивним вінерівським фільтром (фільтром, який адаптує свої характеристики під характер і рівень шумів). --%
noisyImgGray = rgb2gray(noisy3);
noisyImgK_gaus = wiener2(noisyImgGray, [5 5]);
figure, imshow(noisyImgK_gaus), title('Noise filter wiener');

%% 9. Здійснити фільтрацію зашумлених зображень нелінійним медіанним фільтром. Відобразити отриманий результат. Пояснити дію медіанного фільтра на гаусівську й імпульсну перешкоду на зображенні. --%
noisyChipsImgK_gaus = medfilt2(noisyImgGray);
figure, imshow(noisyChipsImgK_gaus ), title('Chips noise filter med');


%- Процедура лінійної фільтрації віконним фільтром
%  1. Вибирається маска (або «вікно-фільтр») розміром, наприклад, 3×3, 5×5 тощо, зі значеннями коефіцієнтів (ядро).  
%  2. Для кожного пікселя вихідного зображення беруть квадратну область навколо нього (того самого розміру, що й вікно).  
%  3. Елемент‑за‑елементом перемножують пікселі цієї області на відповідні коефіцієнти маски.  
%  4. Результати множення підсумовують і записують у вихідний піксель.  
%  5. Повторюють для всіх пікселів (з урахуванням типу обробки країв—віддзеркалення, заповнення нулями тощо).

%- Чому вікна для низько‑ і високочастотної фільтрації відрізняються  
%  - У низькочастотних (сгладжуючих) фільтрах всі коефіцієнти невід’ємні й сума їх дорівнює 1, щоб усереднити сусідні значення й прибрати різкі переходи.  
%  - У високочастотних (підкреслюючих) — деякі коефіцієнти від’ємні, а сума всіх елементів зазвичай нульова, що дозволяє виділяти границі й деталі.

%- Як змінюється вигляд після фільтрації низькочастотними фільтрами  
%  - Зображення стає розмитим, згладженим: зменшується шум і дрібні деталі, «рвані» переходи між яскравими та темними ділянками поступово згладжуються.

%- Як змінюється вигляд після фільтрації високочастотними фільтрами  
%  - Підкреслюються границі, контури й тонкі деталі. Зображення набуває різкості, але шум і артефакти теж можуть стати помітнішими.

%- Для шуму якого характеру найбільше підходить медіанна фільтрація й чому  
%  - Медіанний фільтр ефективно видаляє імпульсні (salt‑and‑pepper) шуми, бо замінює кожен піксель на медіану сусідніх значень. 
% Це усуває окремі спалахи яскравості або темряви, зберігаючи при цьому різкі краї та контури значно краще, 
% ніж лінійні усереднювальні фільтри.